router id 10.207.0.220;
define ownip = 2001:bf7:fc0f::11;
define ownas = 65022;

table ibgp; # internal BGP peerings
table ebgp; # external (icvpn) BGP peerings
table freifunk; # kernel table 42 for routing from ff network
### functions ###

# own network
function is_self_net() {
    return (net ~ [ fdca:ffee:fc0f::/64+, 2001:bf7:fc00::/44+ ]);
}

# freifunk ip ranges in general
function is_freifunk() {
  return net ~ [
	fc00::/7{48,64},
	2001:bf7::/32+ 
  ];
}

### kernel ###

# synchronize from bird to main kernel routing table
# nothing in the other direction
protocol kernel {
    scan time 10;
    import none;
    export filter {
        krt_prefsrc = ownip;
        accept;
    };
};
protocol kernel {
    scan time 10;
    import none;
    export filter {
        krt_prefsrc = ownip;
        accept;
    };
    kernel table 10;
    table freifunk;
};

# this pseudo-protocol watches all interface up/down events
protocol device {
    scan time 10;
};

### pipes ###

# sync nothing from main routing table to ebgp
# sync routes (not own network) from ebgp to main routing table
protocol pipe p_maintbl {
    peer table ebgp;
    import where !is_self_net() && is_freifunk();
    export none;
};

# sync routes (not own network) from ebgp to ibgp
# sync routes (all) from ibgp to ebgp
protocol pipe p_ibgptbl {
  table ebgp;
  peer table ibgp;
  import all;
  export where !is_self_net();
};

# sync routes (freifunk, dn42 and chaosvpn) from ibgp to freifunk
# sync nothing from freifunk to ibgp
protocol pipe p_freitbl {
  table ibgp;
  peer table freifunk;
  import none;
  export all;
};

### static routes ###
#protocol static static_fftr {  
#  route fdca:ffee:fc0f::/64 via "br-fftr";
#  table ibgp;
#};

protocol static static_fftr_pubip {
  route 2001:bf7:fc0f::/64 via "br-fftr";
  table ibgp;
}

### templates ###

# template for same city freifunk gateways
template bgp locals {
  table ibgp;
  local as ownas;
  import filter {
    preference = 99;
    accept;
  };
  export where source = RTS_BGP;
  direct;
  next hop self;
};

# template for icvpn gateways of other cities
template bgp peers {
  table ebgp;
  local as ownas;
  # ignore routes for our own network
  import where !is_self_net(); #yes, we import EVERYTHING not routing to our net
  export where is_freifunk();
  route limit 10000;
};

#to router advertisments
protocol radv {
    interface "br-fftr" {
	prefix 2001:bf7:fc0f::/64 {};
        rdnss {
            ns 2001:bf7:fc0f::11;
        };  
        #dnssl {
        #    domain "bremen.freifunk.net";
        #    lifetime mult 10; 
        #};  
    };  
    trigger ::/0; # we send lifetime 0 if we have no internet uplink
    export where net = ::/0;
    table ibgp;
};
### additional configuration  ###

include "/etc/bird/bird6.d/*";
